name: EC2 배포

on:
  push:
    branches:
      - main

env:
  DB_URL: ${{ secrets.DB_URL }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_USER_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: 레포지토리 체크 아웃
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: deploy to ec2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
            sudo docker stop app || true
            sudo docker rm app || true
            sudo docker run -d \
              --name app \
              -e DB_URL=${{ secrets.DB_URL }} -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_USER_PASSWORD=${{ secrets.DB_USER_PASSWORD }} -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              --restart on-failure \
              -p 80:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest